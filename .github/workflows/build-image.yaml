name: Build and Deploy Microservices

on:
  workflow_dispatch:

permissions:
  id-token:   write
  contents:   write     

jobs:
  # detect-changes:
  #   name: Detect Changes
  #   runs-on: ubuntu-latest
  #   outputs:
  #     patient-service: ${{ steps.changes.outputs.patient-service }}
  #     appointment-service: ${{ steps.changes.outputs.appointment-service }}
    
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4
        
  #     - name: Detect Changes
  #       uses: dorny/paths-filter@v2
  #       id: changes
  #       with:
  #         filters: |
  #           patient-service:
  #             - 'microservices/patient-service/**'
  #           appointment-service:
  #             - 'microservices/appointment-service/**'

  patient-service:
    name: Build Patient Service
    runs-on: ubuntu-latest
    # needs: detect-changes
    # if: needs.detect-changes.outputs.patient-service == 'true'
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::994466158061:role/github-action-oidc
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        working-directory: microservices/patient-service
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: patient_micro_service
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  appointment-service:
    name: Build Appointment Service
    runs-on: ubuntu-latest
    # needs: detect-changes
    # if: needs.detect-changes.outputs.appointment-service == 'true'
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::994466158061:role/github-action-oidc
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        working-directory: microservices/appointment-service
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: appointment_micro_service
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest